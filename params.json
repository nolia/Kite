{"name":"Kite","tagline":"Kite is a framework aimed to ease android development. ","body":"Kite is a try to make some clarity in Android development, which is full of workarounds and not-easy-hacks.   \r\n   \r\nNow it consists only from Wire - a helper for binding to Android [Services](http://developer.android.com/guide/components/services.html)   \r\n   \r\n### Coming soon:\r\n* Async methods wrappers\r\n* Remote - binding to remote services without Aidl\r\n* Command services - handy services that can do work in background\r\n* Graphite - extension to android storage \r\n* and, an assortment of tasty helpers \r\n\r\n## Wire: \r\n\r\nConnecting to local services ( that are in same process as their clients)\r\nusing [binding](http://developer.android.com/guide/components/bound-services.html) mechanism, and by default will also fill dependencies in client.\r\n\r\n    public class MyService extends WiredService {\r\n         @Provided\r\n         WorkerInterface worker = new WorkerImpl();\r\n    }\r\n    public class MyClient { // it can be Activity, Fragment or any object\r\n        // what you need, is Context\r\n        @Wired \r\n        WorkerInterface serviceWorker; \r\n    \r\n        // init\r\n        wire = new Wire(context).from(MyService.class).to(this);\r\n\r\n        // onStart():\r\n        wire.connect();\r\n        // serviceWorker will be filled with WorkerImpl instance from service\r\n\r\n        // onStop():\r\n        wire.disconnect();\r\n       // serviceWorker will be nullified \r\n    }\r\n\r\n### Scopes:\r\nBy default, when you connect pointing service class, you get all provided instances with ALL scope. So if you want to adhere encapsulation, you can set scope provided instances: \r\n\r\n    // will be available only when intent.action == SOME_INTENT_ACTION\r\n    @Provided(scope = Scope.ACTION, action = SOME_INTENT_ACTION )\r\n    SomeInterface worker;\r\n\r\n    // will be available with any intent and with no intent\r\n    @Provided(scope = Scope.ALL )\r\n    SomeInterface worker;\r\n\r\n    // default, will be available only when no intent is set in connection\r\n    @Provided(scope = Scope.DEFAULT)\r\n    SomeInterface worker;\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}